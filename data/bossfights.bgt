sound bossstep;
int speed_modifier=0;
sound diebossfire;
movable_hazard[] boss_fireball(0);
class fireboss {
int health;
sound pain;
sound death;
sound field;
sound yell;
int fireball_interval;
timer spawnBetween;
int position;
fireboss() {
fireball_interval=11000;
field.load("sounds/boss2elec.wav");
position=80;
death.load("sounds/boss2die.wav");
health=60;
}
void taunt() {
yell.load("sounds/boss2taunt"+random(1,2)+".wav");
yell.stop();
yell.play();
}
void throw_fireball() {
if(spawnBetween.elapsed>=random(fireball_interval-1000,fireball_interval+1500)) {
taunt();
spawnBetween.restart();
int fLength=boss_fireball.length();
boss_fireball.resize(fLength+1);
boss_fireball[boss_fireball.length()-1].pos=fboss.position;
boss_fireball[boss_fireball.length()-1].strength=random(80,115);
boss_fireball[boss_fireball.length()-1].hitplayer.load("sounds/firehit.wav");
boss_fireball[boss_fireball.length()-1].voice.load("sounds/fireBall.wav");
boss_fireball[boss_fireball.length()-1].voice.pitch=random(80,110);
boss_fireball[boss_fireball.length()-1].speed=random(350,400)-speed_modifier;
positionBonus2();
boss_fireball[boss_fireball.length()-1].abovePlayer=true;
boss_fireball[boss_fireball.length()-1].voice.play_looped();
}
}
void die() {
death.play_wait();
boss_fireball.resize(0);
}
void retreat() {
position+=random(12,17);
positionBonus2();
}}
fireboss fboss;
void boss2fight() {
diebossfire.load("sounds/diebossfire.wav");
bossstep.load("sounds/step/lvl10/1.wav");
using=4;
level=10;
if(musictype!=8) music.load("sounds/boss2mus.ogg");
sounds.destroy_all();
sound bconv;
bconv.load("sounds/boss2conv.wav");
bconv.play();
while(bconv.playing) {
if(key_pressed(KEY_RETURN)) bconv.stop();
}
music.play_looped();
if(musictype!=8) music.volume=temp_volume;
fboss.field.play_looped();
doStuff();
}
void doStuff() {
bonuskeys();
}
void bonuskeys() {
while(true) {
if(key_down(KEY_LCONTROL)&&key_pressed(KEY_F9)) {
music.stop();
level++;initAfterLevels();}
if(level==11) {keys();break;}
if(key_pressed(KEY_H)) speak(voice[49]+playerhealth +voice[50]+armor);
if(key_pressed(KEY_A)) speak(ammo+voice[51]);
if(playerhealth<=0) {
for(uint x=0; x<boss_fireball.length(); x++) {
boss_fireball[x].speed=random(350,400);
boss_fireball[x].pos=-50000;
boss_fireball[x].voice.volume=-25;
}
diebossfire.play_wait();
speed_modifier=0;
fboss.fireball_interval=10000;
playerposition=0;
playerhealth=250;
fboss.health=60;
fboss.position=80;
lives-=3;
boss_fireball.resize(0);
if(lives>0) boss2fight();
if(lives<=0) {
fboss.field.stop();
sound diecomp;
diecomp.load("sounds/health0conv.ogg");
diecomp.play();
while(diecomp.playing) {
if(diecomp.position>=45553) music.stop();
if(key_pressed(KEY_SPACE)||key_pressed(KEY_RETURN)) diecomp.stop();
}
menu();
}}
if(key_pressed(KEY_C)) alert("stack",get_call_stack());
if(key_pressed(KEY_NEXT)||key_pressed(KEY_NUMPAD3)) music.volume=music.volume-1;
if(key_pressed(KEY_PRIOR)||key_pressed(KEY_NUMPAD9)) music.volume=music.volume+1;
fboss.throw_fireball();
if(key_down(KEY_SPACE)) machgunshot();
if(key_pressed(KEY_LEFT)&&playerposition>=0) {bossstep.stop();
bossstep.play();
playerposition--;
}
if(key_pressed(KEY_RIGHT)) {bossstep.stop();
bossstep.play();
playerposition++;
bosscheck();
}
if(key_pressed(KEY_ESCAPE)) {
for(uint x=0; x<boss_fireball.length(); x++) {
boss_fireball[x].voice.stop();
}
fboss.field.stop();
menu();
return;
}
if(key_down(KEY_DOWN)) {ducked=true;
godown.stop();
godown.play();
while(true) {
if(key_pressed(KEY_H)) speak(voice[49]+playerhealth +voice[50]+armor);
if(key_pressed(KEY_A)) speak(ammo+voice[51]);
fboss.throw_fireball();
for(uint x=0; x<boss_fireball.length(); x++) {
boss_fireball[x].moveControl(1);
}
if(!key_down(KEY_DOWN)) {goup.stop();
goup.play();
ducked=false;
break;
}
positionBonus2();
wait(5);
}}
positionBonus2();
for(uint x=0; x<boss_fireball.length(); x++) {
boss_fireball[x].moveControl(1);
}
wait(8);
}}
void positionBonus2() {
for(uint x=0; x<boss_fireball.length(); x++) {
position_sound_1d(boss_fireball[x].voice,playerposition,boss_fireball[x].pos, 4,3);
}
position_sound_1d(fboss.field,playerposition,fboss.position,4,2);
position_sound_1d(fboss.yell,playerposition,fboss.position,4,1);
}
void machgunshot() {
if(machineguntimer.elapsed>=125) {
machineguntimer.restart();
machinegun.stop();
machinegun.play();
ammo--;
if(fboss.position<=playerposition+gunrange&&fboss.position>playerposition-gunrange) {
speed_modifier+=30;
fboss.health=fboss.health-5;
fboss.pain.load("sounds/boss2hit"+random(1,2)+".wav");
position_sound_1d(fboss.pain,playerposition,fboss.position,4,1);
fboss.pain.play();
fboss.fireball_interval-=750;
fboss.retreat();
if(fboss.health<=0) {fboss.die();
dlgscroll.play();dlg(voice[108]);
totalpoints+=7000;
dlgscroll.play();dlg(voice[109]+totalpoints);
boss_fireball.resize(0);
level=11;
playerposition=0;
levelendposition=285;
boulders=10;
levelenemies=55;
fireballs=9;

dlgscroll.play();dlg(voice[62]);
levelDesc();
music.stop();
initAfterLevels();
return;
}
}
}}
void bosscheck() {
if(playerposition==fboss.position) {
sound scream;
fboss.field.volume=-13;
for(uint x=0; x<boss_fireball.length(); x++) {
boss_fireball[x].voice.volume=-30;
}
scream.load("sounds/boss2elecdie.wav");
scream.play_wait();
fboss.field.stop();
lives--;
fboss.fireball_interval=10000;
boss_fireball.resize(0);
playerposition=0;
speed_modifier=0;
boss2fight();
}}